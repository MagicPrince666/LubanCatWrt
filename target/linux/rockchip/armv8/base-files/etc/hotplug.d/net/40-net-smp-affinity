#!/bin/sh

[ "$ACTION" = add ] || exit

get_device_irq() {
	local device="$1"
	local line
	local seconds="0"

	# wait up to 10 seconds for the irq/device to appear
	while [ "${seconds}" -le 10 ]; do
		line=$(grep -m 1 "${device}\$" /proc/interrupts) && break
		seconds="$(( seconds + 2 ))"
		sleep 2
	done
	echo ${line} | sed 's/:.*//'
}

set_interface_core() {
	local core_mask="$1"
	local interface="$2"
	local device="$3"

	[ -z "${device}" ] && device="$interface"

	local irq=$(get_device_irq "$device")

	echo "${core_mask}" > /proc/irq/${irq}/smp_affinity_list
}


case "$(board_name)" in
embedfire,lubancat1|\
embedfire,lubancat-zero-n)
	set_interface_core 2 "eth0"
	/usr/sbin/ethtool -K eth0 tso on sg on tx on
	;;
embedfire,doornet1|\
friendlyarm,nanopi-r2s)
	set_interface_core 2 "eth0"
	set_interface_core 3 "eth1" "xhci-hcd:usb3"
	/usr/sbin/ethtool -K eth0 tso on sg on tx on
	/usr/sbin/ethtool -K eth1 tso on sg on tx on
	;;
embedfire,doornet2|\
friendlyarm,nanopi-r4s)
	set_interface_core 4 "eth0"
	set_interface_core 5 "eth1"
	/usr/sbin/ethtool -K eth0 tso on sg on tx on
	/usr/sbin/ethtool -K eth1 tso on sg on tx on
	;;
embedfire,lubancat1n|\
embedfire,lubancat2|\
firefly,rk3568-roc-pc)
	set_interface_core 2 "eth0"
	set_interface_core 3 "eth1"
	/usr/sbin/ethtool -K eth0 tso on sg on tx on
	/usr/sbin/ethtool -K eth1 tso on sg on tx on
	;;
embedfire,lubancat2n)
	set_interface_core 0 "eth0"
	set_interface_core 1 "eth1"
	set_interface_core 2 "eth2-0"
	set_interface_core 2 "eth2-16"
	set_interface_core 1 "eth2-18"
	set_interface_core 3 "eth3-0"
	set_interface_core 3 "eth3-18"
	set_interface_core 1 "eth3-16"
	rfc=32768
	sysctl net.core.rps_sock_flow_entries=$rfc
	for fileRfc in $(ls /sys/class/net/eth*/queues/rx-*/rps_flow_cnt)
	do
		eth_name=$(echo "$fileRfc"|awk -F/ '{print $5}')
		echo $rfc > $fileRfc
	done
	echo 9 > /sys/class/net/eth0/queues/rx-0/rps_cpus
	echo 9 > /sys/class/net/eth1/queues/rx-0/rps_cpus
	echo 3 > /sys/class/net/eth2/queues/rx-0/rps_cpus
	echo 3 > /sys/class/net/eth2/queues/rx-1/rps_cpus
	echo c > /sys/class/net/eth3/queues/rx-0/rps_cpus
	echo c > /sys/class/net/eth3/queues/rx-1/rps_cpus
	/usr/sbin/ethtool -K eth0 tso on sg on tx on
	/usr/sbin/ethtool -K eth1 tso on sg on tx on
	/usr/sbin/ethtool -K eth2 tso on sg on tx on
	/usr/sbin/ethtool -K eth3 tso on sg on tx on
	;;
esac
